 //Insert it has 3type of insert insertone() insertmany() and normal insert()

#insert() syntax
db.collection_name.insert({key:'value'});

#insertone() syntax
> db.emp.insertOne(
	{
		First_Name: "Radhika",
		Last_Name: "Sharma",
		Date_Of_Birth: "1995-09-26",
		e_mail: "radhika_sharma.123@gmail.com",
		phone: "9848022338"
	})

#insertmany() syntax
You can insert multiple documents using the insertMany() method. To this method you need to pass an array of documents.


> db.empDetails.insertMany(
	[
		{
			First_Name: "Radhika",
			Last_Name: "Sharma",
			Date_Of_Birth: "1995-09-26",
			e_mail: "radhika_sharma.123@gmail.com",
			phone: "9000012345"
		},
		{
			First_Name: "Rachel",
			Last_Name: "Christopher",
			Date_Of_Birth: "1990-02-16",
			e_mail: "Rachel_Christopher.123@gmail.com",
			phone: "9000054321"
		}
	]
)

	 
//Find  

db.emp.find();
db.emp.find().pretty();// in formated way
db.emp.find({"JOB":"MANAGER"});
 db.emp.find({"SAL":{$lt:5000}}).pretty(); lt = les than
db.emp.find({"SAL":{$gt:4000}}).pretty();
db.emp.find({"SAL":{$gte:4000}}).pretty();


//Not
db.emp.find({"SAL":{$not:{$gt:4000}}}).pretty();//Salary should not be greater than 4000.

//And 
db.emp.find({$and:[{"SAL":4000},{"JOB":"MANAGER"}]}).pretty();

//or
db.emp.find({$or:[{"SAL":4000},{"JOB":"MANAGER"}]}).pretty();

//and or together
find emp whose deptno is greater than 10 and sal is 4000 or his job is as Manager.
db.emp.find({"DEPTNO":{$gt:10},$or:[{"SAL":4000},{"JOB":"MANAGER"}]}).pretty();

 //Update 
*update only modify single value for multiple we have specify {multi:true}
db.emp.update({'DEPTNO':10},{$set:{'DEPTNO':11}}); 
db.emp.update({'DEPTNO':10},{$set:{'DEPTNO':11}},{multi:true});


//Remove()
>db.emp.remove({'JOB':'MANAGER'});

//Projection
* In MongoDB, projection means selecting only the necessary data rather than selecting whole of the data of a document. 
If a document has 5 fields and you need to show only 3, then select only 3 fields from them.

db.emp.find({},{"ename":1,_id:0});


//LIMIT()
 db.emp.find({},{"ENAME":1}).limit(2); 
db.emp.find().limit(2).pretty();

//SKIP()
skip() which also accepts number type argument and is used to skip the number of documents.

db.emp.find().limit(2).skip(1).pretty();

//sort()
To sort documents in MongoDB, you need to use sort() method. 
The method accepts a document containing a list of fields along with their sorting order.
To specify sorting order 1 and -1 are used. 1 is  used for ascending order while -1 is used for descending order.

> db.emp.find({},{"ENAME":1,_id:0}).sort({"ENAME":-1});

//index


































